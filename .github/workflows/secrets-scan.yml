name: Secrets Scan

on:
  workflow_call:
    outputs:
      scan-result:
        description: "Secrets scan result"
        value: ${{ jobs.secrets-scan.outputs.result }}

jobs:
  # =============================================================================
# GITLEAKS SECRETS SCAN JOB
# =============================================================================
#
# Gitleaks is a secrets detection tool for finding credentials in code and git history
# Repository: https://github.com/gitleaks/gitleaks
#
# TO USE THIS JOB:
# 1. Copy this entire job definition into .github/workflows/secrets-scan.yml
# 2. Replace the current jobs: definition with this one
# 3. The job will scan the current filesystem for secrets (not git history)
# 4. The scan will fail if any secrets are found
# 5. For production use, consider enabling git history scan (see OPTION 1 below)
# =============================================================================

jobs:
  secrets-scan:
    name: Secrets Scan with Gitleaks
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.scan-result.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Run Gitleaks secrets scanner
        id: scan-tool
        run: |
          # Install Gitleaks
          wget -O /tmp/gitleaks.tar.gz https://github.com/gitleaks/gitleaks/releases/download/v8.28.0/gitleaks_8.28.0_linux_x64.tar.gz
          tar -xzf /tmp/gitleaks.tar.gz -C /tmp/
          sudo mv /tmp/gitleaks /usr/local/bin/

          # OPTION 1: Scan entire git history + current filesystem (recommended for production CI)
          # NOTE: This option may require cleaning git history if secrets are found in past commits
          # gitleaks detect --source . --verbose --exit-code 1

          # OPTION 2: Scan only current filesystem without git history (WORKSHOP DEFAULT)
          # This option is used for the workshop as it focuses on current code without requiring git history cleanup
          gitleaks detect --source . --no-git --verbose --exit-code 1

      - name: Set scan result
        id: scan-result
        if: always()
        run: |
          if [ "${{ steps.scan-tool.outcome }}" == "success" ]; then
            echo "result=success" >> "$GITHUB_OUTPUT"
            echo "✅ Secrets scan passed - no secrets detected"
          else
            echo "result=failure" >> "$GITHUB_OUTPUT"
            echo "❌ Secrets scan failed - secrets detected in repository"
            exit 1
          fi
