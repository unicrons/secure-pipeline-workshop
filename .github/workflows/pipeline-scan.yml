name: Pipeline Security Scan

on:
  workflow_call:
    outputs:
      scan-result:
        description: "Pipeline scan result"
        value: ${{ jobs.pipeline-scan.outputs.result }}

jobs:
  # üöß REPLACE THIS ENTIRE 'jobs:' SECTION WITH WORKSHOP CONTENT! üöß
  # Copy from: workshop/pipeline_scan/{tool}/workflow.yml

  pipeline-scan:
    name: Pipeline Scan with Claws
    runs-on: ubuntu-latest
    outputs:
      result: ${{ steps.scan-result.outputs.result }}
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Set Up Ruby
        uses: ruby/setup-ruby@master
        with:
          ruby-version: '3.3'

      - name: Set Up Claws Config
        run: |
          cp workshop/pipeline_scan/claws/claws-config.yml /tmp/claws-config.yml

      - name: Set Up Shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Set Up Claws
        run: |
          gem install claws-scan -v 0.7.5

      - name: Run Claws pipeline scanner
        id: scan-tool
        run: |
          #!/bin/bash

          echo "üîç Starting workflow security analysis..."

          # Find all workflow files in .github/workflows directory
          workflow_files=$(find .github/workflows -type f)

          # Check if any workflow files exist
          if [[ -z "$workflow_files" ]]; then
            echo "‚ö†Ô∏è  No workflow files found in .github/workflows"
            echo "   Make sure your workflows are in the correct directory"
            exit 0
          fi

          # Prepare command flags for each workflow file
          flags=()
          echo "üìÅ Found workflow files:"

          while IFS= read -r file; do
            echo "   - $file"
            flags+=("-t" "$file")
          done <<< "$workflow_files"

          echo ""
          echo "üöÄ Running Claws security analysis..."

          # Execute the security analysis
          analyze -f stdout -c /tmp/claws-config.yml "${flags[@]}"

      - name: Set scan result
        id: scan-result
        if: always()
        run: |
          if [ "${{ steps.scan-tool.outcome }}" == "success" ]; then
            echo "result=success" >> "$GITHUB_OUTPUT"
            echo "‚úÖ Pipeline scan passed - no security issues detected"
          else
            echo "result=failure" >> "$GITHUB_OUTPUT"
            echo "‚ùå Pipeline scan failed - security issues detected in workflows"
            exit 1
          fi
